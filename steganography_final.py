# -*- coding: utf-8 -*-
"""Steganography final.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_D53K6VjpVK3pd7G6KYlrbBpDHCs0gwb
"""

import cv2
import string
import os
import subprocess, sys
import numpy as np
import types
from google.colab.patches import cv2_imshow

d = {}
c = {}

for i in range(255):
  d[chr(i)] = i
  c[i] = chr(i)

image = input("name of image file with extention")
x = cv2.imread(image)
i = x.shape[0]
j = x.shape[1]
print(i,j)
print("\n\n This is the original photo:")
cv2_imshow(x)

key = input("Enter key to secure the data (the Security key) : ")
text = input("Input text to hide : ")

kl = 0 
tln = len(text)
z = 0
n = 0
m = 0

l = len(text)

for i in range(l):
  x[n,m,z] = d[text[i]]^d[key[kl]]
  n = n+1
  m = m+1
  m = (m+1)%3

  kl = (kl+1)%len(key)

cv2.imwrite("encrypted_image.jpg", x)
new = cv2.imread('encrypted_image.jpg')
opener ="open"
if sys.platform == "darwin":
  subprocess.call([opener, encrypted_image.jpg])
print("Data hiding in iamge completed successfully \n\n\n\n This is the encrypted photo")
cv2_imshow(new)

kl = 0
tln = len(text)
z = 0
n = 0
m = 0

ch = int(input("\nEnter 1 to extract data from image"))

if ch == 1:
  key1 = input("\n\n enter key to extract text: ")
  decrypt = ""

  if key == key1:
    for i in range(l):
      decrypt += c[x[n,m,z]^d[key[kl]]]
      n = n+1
      m = m+1
      m = (m+1)%3
      kl = (kl+1)%len(key)
    print("encrypted text was : ", decrypt)
  else:
    print("key doesn't matched")